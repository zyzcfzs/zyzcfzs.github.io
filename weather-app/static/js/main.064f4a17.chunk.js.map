{"version":3,"sources":["Icons.js","Weather.js","Title.js","App.js","index.js"],"names":["SunShower","class","Thunder","Cloudy","Flurries","Sunny","Rainy","Weather","React","useState","location","degree","status","description","weather","setWeather","loading","setLoading","weatherIcon","setWeatherIcon","unit","setUnit","covertTemp","temp","result","parseFloat","toFixed","useEffect","chooseIcon","navigator","geolocation","getCurrentPosition","success","fetch","parseInt","coords","latitude","longitude","then","res","json","data","name","sys","country","main","catch","error","console","log","alert","className","style","display","onClick","color","textDecoration","Title","Fragment","href","target","rel","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.064f4a17.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./css/icon.css\";\r\nexport function SunShower() {\r\n    return (\r\n        <div class='icon sun-shower'>\r\n            <div class='cloud'></div>\r\n            <div class='sun'>\r\n                <div class='rays'></div>\r\n            </div>\r\n            <div class='rain'></div>\r\n        </div>\r\n    );\r\n}\r\nexport function Thunder() {\r\n    return (\r\n        <div class='icon thunder-storm'>\r\n            <div class='cloud'></div>\r\n            <div class='lightning'>\r\n                <div class='bolt'></div>\r\n                <div class='bolt'></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Cloudy() {\r\n    return (\r\n        <div class='icon cloudy'>\r\n            <div class='cloud'></div>\r\n            <div class='cloud'></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Flurries() {\r\n    return (\r\n        <div class='icon flurries'>\r\n            <div class='cloud'></div>\r\n            <div class='snow'>\r\n                <div class='flake'></div>\r\n                <div class='flake'></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport function Sunny() {\r\n    return (\r\n        <div class='icon sunny'>\r\n            <div class='sun'>\r\n                <div class='rays'></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function Rainy() {\r\n    return (\r\n        <div class='icon rainy'>\r\n            <div class='cloud'></div>\r\n            <div class='rain'></div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './css/weather.css';\r\nimport * as Icon from './Icons.js';\r\nconst baseUrl = 'https://weather-proxy.freecodecamp.rocks/api/current?';\r\nconst Weather = () => {\r\n    const [weather, setWeather] = React.useState({\r\n        location: '',\r\n        degree: '',\r\n        status: '',\r\n        description: '',\r\n    });\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [weatherIcon, setWeatherIcon] = React.useState('');\r\n    const [unit, setUnit] = React.useState('C');\r\n    function covertTemp(temp, unit) {\r\n        let result = null;\r\n        if (unit === 'F') {\r\n            result = (temp * 9) / 5 + 32;\r\n        } else if (unit === 'C') {\r\n            result = ((temp - 32) * 5) / 9;\r\n        }\r\n        return parseFloat(result.toFixed(2));\r\n    }\r\n    React.useEffect(() => {\r\n        function chooseIcon() {\r\n            switch (weather.status) {\r\n                case 'Thunderstorm':\r\n                    setWeatherIcon(<Icon.Thunder></Icon.Thunder>);\r\n                    break;\r\n                case 'Clouds':\r\n                    setWeatherIcon(<Icon.Cloudy></Icon.Cloudy>);\r\n                    break;\r\n                case 'Snow':\r\n                    setWeatherIcon(<Icon.Flurries></Icon.Flurries>);\r\n                    break;\r\n                case 'Rain':\r\n                    setWeatherIcon(<Icon.Rainy></Icon.Rainy>);\r\n                    break;\r\n                case 'Drizzle':\r\n                    setWeatherIcon(<Icon.SunShower></Icon.SunShower>);\r\n                    break;\r\n                default:\r\n                    setWeatherIcon(<Icon.Sunny></Icon.Sunny>);\r\n            }\r\n        }\r\n        chooseIcon();\r\n    }, [weather.status]);\r\n    React.useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(\r\n            (success) => {\r\n                fetch(\r\n                    `${baseUrl}lat=${parseInt(\r\n                        success.coords.latitude\r\n                    )}&lon=${parseInt(success.coords.longitude)}`\r\n                )\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        setWeather({\r\n                            location: data.name + ',' + data.sys.country,\r\n                            degree: data.main.temp,\r\n                            status: data.weather[0].main,\r\n                            description: data.weather[0].description,\r\n                        });\r\n                        setLoading(!loading);\r\n                    })\r\n                    .catch((error) => console.log(error));\r\n            },\r\n            () => {\r\n                alert(\r\n                    `please enable your geolocation permission for this app to work`\r\n                );\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    function handleUnit() {\r\n        if (unit === 'C') {\r\n            setUnit('F');\r\n            setWeather((weather) => {\r\n                return { ...weather, degree: covertTemp(weather.degree, 'F') };\r\n            });\r\n        } else {\r\n            setUnit('C');\r\n            setWeather((weather) => {\r\n                return { ...weather, degree: covertTemp(weather.degree, 'C') };\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <div\r\n            className='weather'\r\n            style={{ display: loading ? 'none' : 'block' }}\r\n        >\r\n            <div className='location'>{weather.location} </div>\r\n            <div className='degree'>\r\n                {weather.degree} Â°\r\n                <span\r\n                    onClick={handleUnit}\r\n                    style={{ color: 'blue', textDecoration: 'none' }}\r\n                >\r\n                    {unit}\r\n                </span>\r\n            </div>\r\n            <div className='status'>\r\n                {weather.status} | {weather.description}\r\n            </div>\r\n            {weatherIcon}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Weather;\r\n","import React, { useState } from 'react';\r\nimport './css/title.css';\r\nimport Weather from './Weather';\r\nconst Title = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className='title'>\r\n                <h2>Free C<i className=\"wi wi-hail\"></i>de Camp</h2>\r\n                <h2>Weather App</h2>\r\n            </div>\r\n            <Weather ></Weather>\r\n            <div className='footer'>\r\n                Inspired By{' '}\r\n                <a\r\n                    href='https://codepen.io/joshbader/full/EjXgqr/'\r\n                    target='_blank'\r\n                    rel='noreferrer'\r\n                >\r\n                    joshbader\r\n                </a>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Title;\r\n","import Title from \"./Title\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Title></Title>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport \"./css/background.css\";\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}