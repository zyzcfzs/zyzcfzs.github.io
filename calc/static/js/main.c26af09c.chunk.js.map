{"version":3,"sources":["util.js","Display.js","constant.js","KeyBoard.js","App.js","index.js"],"names":["addZeroDecimal","str","replace","Display","formula","current","className","id","calcOperation","sign","calcNumbers","val","KeyBoard","setCurrent","setFormula","onClick","evt","target","innerText","includes","match","length","test","testValid","slice","result","format","evaluate","replaceAll","precision","handleClick","map","Math","random","App","React","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c26af09c.chunk.js","sourcesContent":["export function addZeroDecimal(str){\r\n    return str.replace(/(^|[-\\x+=])(\\.)/g,\"$10$2\")\r\n}\r\nexport function testValid(str) {\r\n    return !(str.match(/\\./g)?.length > 1) && !/^(0{1,}\\d)/.test(str);\r\n}","import React from 'react';\r\nimport './css/display.css';\r\nimport { addZeroDecimal } from './util';\r\nconst Display = ({ formula, current }) => {\r\n    \r\n    return (\r\n        <div className=\"display-pad\">\r\n            <div className=\"formula\">{addZeroDecimal(formula)}</div>\r\n            <div id=\"display\">{addZeroDecimal(current) || 0}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Display;\r\n","export let calcOperation = [\r\n    { sign: '/', id: 'divide' },\r\n    { sign: 'x', id: 'multiply' },\r\n    {\r\n        sign: '-',\r\n        id: 'subtract',\r\n    },\r\n    { sign: '+', id: 'add' },\r\n    { sign: '=', id: 'equals' },\r\n];\r\nexport let calcNumbers = [\r\n    { val: 7, id: 'seven' },\r\n    { val: 8, id: 'eight' },\r\n    { val: 9, id: 'nine' },\r\n    { val: 4, id: 'four' },\r\n    { val: 5, id: 'five' },\r\n    { val: 6, id: 'six' },\r\n    { val: 1, id: 'one' },\r\n    { val: 2, id: 'two' },\r\n    { val: 3, id: 'three' },\r\n    { val: 0, id: 'zero' },\r\n    { val: '.', id: 'decimal' },\r\n];\r\n","import { evaluate, format } from 'mathjs';\r\nimport { calcNumbers, calcOperation } from './constant';\r\nimport './css/keypad.css';\r\nimport { testValid } from './util';\r\nexport function KeyBoard({ current, formula, setCurrent, setFormula }) {\r\n    function handleClick(evt) {\r\n        const { id, className, innerText } = evt.target;\r\n        if (className === 'number') {\r\n            if (formula.includes('=') === true) {\r\n                setCurrent(innerText);\r\n                setFormula(innerText);\r\n                return;\r\n            }\r\n            const checkText = current.replace(/^[-/+x]/, '') + innerText;\r\n            if (testValid(checkText) === false) {\r\n                if (innerText !== '.') {\r\n                    setCurrent(innerText);\r\n                    setFormula(formula.slice(0, -1) + innerText);\r\n                }\r\n                return;\r\n            }\r\n            setCurrent(current + innerText);\r\n            setFormula((formula) => formula + innerText);\r\n        } else if (id === 'equals') {\r\n            if (\r\n                formula.includes('=') ||\r\n                formula.length === 0 ||\r\n                /[^0-9]$/.test(formula)\r\n            )\r\n                return;\r\n            const result = format(evaluate(formula.replaceAll('x', '*')), {\r\n                precision: 10,\r\n            });\r\n            setCurrent(result);\r\n            setFormula((formula) => `${formula}=${result}`);\r\n        } else if (className === 'clear') {\r\n            setCurrent('');\r\n            setFormula('');\r\n        } else if (className === 'operation') {\r\n            if (formula.includes('=')) {\r\n                setCurrent(innerText);\r\n                setFormula(current + innerText);\r\n            } else if (formula.length === 0) {\r\n                if (formula.slice(-1) === '.') {\r\n                    return;\r\n                } else if (innerText === '-') {\r\n                    setCurrent(innerText);\r\n                    setFormula(innerText);\r\n                }\r\n            } else if (formula === '-') {\r\n                return;\r\n            } else {\r\n                setCurrent(innerText);\r\n                setFormula((formula) => {\r\n                    if (innerText !== '-') {\r\n                        return (\r\n                            formula.replace(/(\\d)[/x+-]+$/g, '$1') + innerText\r\n                        );\r\n                    } else if (/[-x+/]{2}$/.test(formula)) {\r\n                        return formula;\r\n                    }\r\n                    return formula + innerText;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <div\r\n            className=\"keypads\"\r\n            onClick={(evt) => {\r\n                handleClick(evt);\r\n            }}\r\n        >\r\n            <div id=\"clear\" className=\"clear\">\r\n                AC\r\n            </div>\r\n            {calcOperation.map((val) => {\r\n                return (\r\n                    <div id={val.id} className=\"operation\" key={Math.random()}>\r\n                        {val.sign}\r\n                    </div>\r\n                );\r\n            })}\r\n            <div className=\"numbers\">\r\n                {calcNumbers.map((val) => {\r\n                    return (\r\n                        <div id={val.id} className=\"number\" key={Math.random()}>\r\n                            {val.val}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport Display from './Display';\nimport { KeyBoard } from './KeyBoard';\nfunction App() {\n    const [formula, setFormula] = React.useState('');\n    const [current, setCurrent] = React.useState(\"\");\n    return (\n        <div className=\"calculator\">\n            <Display\n                {...{\n                    current,\n                    formula,\n                }}\n            ></Display>\n            <KeyBoard\n                {...{\n                    current,\n                    formula,\n                    setCurrent,\n                    setFormula,\n                }}\n            ></KeyBoard>\n        </div>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/global.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}