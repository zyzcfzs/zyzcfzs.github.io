{"version":3,"sources":["card.js","App.js","index.js"],"names":["Card","theme","setTheme","randomColor","React","useState","quote","author","data","setData","opacity","setOpacity","quotes","useRef","getRandomQuote","parseInt","Math","random","length","undefined","useEffect","fetch","then","res","json","current","catch","err","Error","id","className","style","type","backgroundColor","onClick","setTimeout","color","title","href","rel","target","toString","App","Fragment","background","Root","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"+LAsFeA,EAnFF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7B,EAAwBC,IAAMC,SAAS,CAAEC,MAAO,GAAIC,OAAQ,KAA5D,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BL,IAAMC,SAAS,GAA7C,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,EAASR,IAAMS,OAAO,IAC5B,SAASC,EAAeF,GACpB,IAAIN,EAAQM,EAAOG,SAASC,KAAKC,SAAWL,EAAOM,cACrCC,IAAVb,GACJG,EAAQH,GAaZ,OAXAF,IAAMgB,WAAU,WACZC,MAXJ,0IAYSC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GACHI,EAAOa,QAAUjB,EAAKI,OACtBE,EAAeF,EAAOa,YAEzBC,OAAM,SAACC,GACJ,MAAM,IAAIC,MAAMD,QAEzB,IAEC,sBAAKE,GAAG,YAAR,UACI,sBAAKC,UAAU,UAAUC,MAAO,CAAErB,QAASA,GAA3C,UACI,sBAAKmB,GAAG,OAAR,UACI,mBAAGC,UAAU,4BADjB,IACiDtB,EAAKF,SAEtD,sBAAKuB,GAAG,SAAR,gBAAqBrB,EAAKD,aAE9B,sBAAKuB,UAAU,SAAf,UACI,wBACIE,KAAK,SACLH,GAAG,YACHE,MAAO,CAAEE,gBAAiBhC,GAC1BiC,QAAS,WACLvB,EAAW,GACXwB,YAAW,WACPjC,EAASC,KACTW,EAAeF,EAAOa,SACtBd,EAAW,KACZ,MAVX,uBAeA,sBAAKmB,UAAU,QAAf,UACI,mBACID,GAAG,cACHC,UAAU,YACVC,MAAO,CAAEE,gBAAiBhC,EAAOmC,MAAO,WACxCC,MAAM,oBACNC,KAAK,uCACLC,IAAI,aACJC,OAAO,SAPX,SASI,mBAAGV,UAAU,oBAEjB,mBACID,GAAG,iBACHC,UAAU,YACVC,MAAO,CAAEE,gBAAiBhC,EAAOmC,MAAO,WACxCC,MAAM,uBACNC,KAAK,2BACLC,IAAI,aACJC,OAAO,SAPX,SASI,mBAAGV,UAAU,2BAIzB,sBAAKA,UAAU,OAAf,eACO,IACH,mBACIQ,KAAK,6BACLE,OAAO,SACPD,IAAI,aAHR,4B,MCvEhB,SAASpC,IACL,MAAO,IAAMY,SAAS,SAAWC,KAAKC,UAAUwB,SAAS,IAE7D,IAYeC,EAZH,WACR,MAAyBtC,IAAMC,SAASF,KAAxC,mBAAOF,EAAP,KAAaC,EAAb,KACA,OACI,cAAC,IAAMyC,SAAP,UACI,qBAAKb,UAAU,aAAaC,MAAO,CAACK,MAAMnC,EAAM2C,WAAW3C,GAA3D,SACI,cAAC,EAAD,CAAMA,MAAOA,EAAOC,SAAUA,EAAUC,YAAaA,SCR/D0C,EAAO,WACT,OACI,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,OAKZC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.fe5c6e89.chunk.js","sourcesContent":["import React from 'react';\r\nconst QUOTEURL =\r\n    'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json';\r\nconst Card = ({ theme, setTheme, randomColor }) => {\r\n    const [data, setData] = React.useState({ quote: '', author: '' });\r\n    const [opacity, setOpacity] = React.useState(1);\r\n    const quotes = React.useRef([]);\r\n    function getRandomQuote(quotes) {\r\n        let quote = quotes[parseInt(Math.random() * quotes.length)];\r\n        if (quote === undefined) return;\r\n        setData(quote);\r\n    }\r\n    React.useEffect(() => {\r\n        fetch(QUOTEURL)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                quotes.current = data.quotes;\r\n                getRandomQuote(quotes.current);\r\n            })\r\n            .catch((err) => {\r\n                throw new Error(err);\r\n            });\r\n    }, []);\r\n    return (\r\n        <div id='quote-box'>\r\n            <div className='textbox' style={{ opacity: opacity }}>\r\n                <div id='text'>\r\n                    <i className='bi bi-chat-square-quote'></i> {data.quote}\r\n                </div>\r\n                <div id='author'> - {data.author}</div>\r\n            </div>\r\n            <div className='shares'>\r\n                <button\r\n                    type='button'\r\n                    id='new-quote'\r\n                    style={{ backgroundColor: theme }}\r\n                    onClick={() => {\r\n                        setOpacity(0);\r\n                        setTimeout(() => {\r\n                            setTheme(randomColor());\r\n                            getRandomQuote(quotes.current);\r\n                            setOpacity(1);\r\n                        }, 500);\r\n                    }}\r\n                >\r\n                    New Quote\r\n                </button>\r\n                <div className='links'>\r\n                    <a\r\n                        id='tweet-quote'\r\n                        className='iconlinks'\r\n                        style={{ backgroundColor: theme, color: '#ffffff' }}\r\n                        title='Tweet this quote!'\r\n                        href='https://www.twitter.com/intent/tweet'\r\n                        rel='noreferrer'\r\n                        target='_blank'\r\n                    >\r\n                        <i className='bi bi-twitter'></i>\r\n                    </a>\r\n                    <a\r\n                        id='facebook-quote'\r\n                        className='iconlinks'\r\n                        style={{ backgroundColor: theme, color: '#ffffff' }}\r\n                        title='Share it on Facebook'\r\n                        href='https://www.facebook.com'\r\n                        rel='noreferrer'\r\n                        target='_blank'\r\n                    >\r\n                        <i className='bi bi-facebook'></i>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className='info'>\r\n                By{' '}\r\n                <a\r\n                    href='https://zyzcfzs.github.io/'\r\n                    target='_blank'\r\n                    rel='noreferrer'\r\n                >\r\n                    zyzcfzs\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './card';\r\nimport \"./css/style.css\";\r\nfunction randomColor() {\r\n    return '#' + parseInt(0xffffff * Math.random()).toString(16);\r\n}\r\nconst App = () => {\r\n    const [theme,setTheme] = React.useState(randomColor())\r\n    return (\r\n        <React.Fragment>\r\n            <div className='background' style={{color:theme,background:theme}}>\r\n                <Card theme={theme} setTheme={setTheme} randomColor={randomColor}/>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nconst Root = () => {\r\n    return (\r\n        <React.StrictMode>\r\n            <App />\r\n        </React.StrictMode>\r\n    );\r\n};\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}